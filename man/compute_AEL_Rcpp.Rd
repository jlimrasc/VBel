% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute-AEL-functions-Rcpp.R
\name{compute_AEL_Rcpp}
\alias{compute_AEL_Rcpp}
\title{Computes Adjusted Empirical Likelihood Interference for a data set using R and C++
with RcppEigen}
\usage{
compute_AEL_Rcpp(th, h, lam0, a, z, T, useR_forz, returnH)
}
\arguments{
\item{th}{Vector or scalar theta}

\item{h}{User-defined function, outputs array}

\item{lam0}{Initial vector for lambda}

\item{a}{Scalar constant}

\item{z}{n-1 by d matrix}

\item{T}{Number of iterations using Newton-Raphson for estimation of lambda (default: 500)}

\item{useR_forz}{Bool whether to calculate the function first in R (True) or call the function in C (False) (default: True)}

\item{returnH}{Whether to return calculated values of h, H matrix and lambda}
}
\value{
The AEL of the data set
}
\description{
\code{compute_AEL_Rcpp} returns the result of running AEL with the values present in the arguments.
}
\examples{
compute_AEL_Rcpp(matrix(c(0.8277, -1.0050), nrow = 2), function(z, th) {matrix(c(z[2] - th[1] - th[2] * z[1], z[1]*(z[2] - th[1] - th[2] * z[1])), nrow = 2)}, matrix(c(0,0), nrow = 2), 0.001, cbind(runif(30, min = -5, max = 5), 0.75 - runif(30, min = -5, max = 5) + rnorm(30, mean = 0, sd = 1)))
}
\seealso{
\code{\link[=compute_AEL_R]{compute_AEL_R()}} for purely R computation
}
