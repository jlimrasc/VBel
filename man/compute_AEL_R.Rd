% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute-AEL-functions.R
\name{compute_AEL_R}
\alias{compute_AEL_R}
\title{Computes Accurate Empirical Likelihood Interference for a data set using R}
\usage{
compute_AEL_R(th, h, lam0, a, z, T, returnH)
}
\arguments{
\item{th}{Vector or scalar theta, k x 1 matrix}

\item{h}{User-defined moment-condition function, outputs a k x 1 matrix containing the kth row of h. Function must take two arguments: zi and theta for h(zi,th)}

\item{lam0}{Initial guess for lambda, k x 1 matrix}

\item{a}{Scalar AEL constant, must be >0, small values recommended}

\item{z}{Data matrix, n-1 x d matrix}

\item{T}{Number of iterations using Newton-Raphson for estimation of lambda (default: 500)}

\item{returnH}{Whether to return calculated values of h, H matrix and lambda}
}
\value{
The AEL of the data set
}
\description{
\code{compute_AEL} returns the result of running AEL with the values present in
the arguments.
}
\examples{
set.seed(1)
x    <- runif(30, min = -5, max = 5)
elip <- rnorm(30, mean = 0, sd = 1)
y    <- 0.75 - x + elip
lam0 <- matrix(c(0,0), nrow = 2)
th   <- matrix(c(0.8277, -1.0050), nrow = 2)
a <- 0.001
z    <- cbind(x, y)
h    <- function(z, th) {
    xi <- z[1]
    yi <- z[2]
    h_zith <- c(yi - th[1] - th[2] * xi)
    h_zith[2] <- xi * h_zith[1]
    matrix(h_zith, nrow = 2)
}
ans <-compute_AEL_R(th, h, lam0, a, z)
}
